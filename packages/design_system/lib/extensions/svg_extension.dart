import 'package:design_system/lib.dart';

extension SvgExtension on SvgGenImage {
  SvgPicture svgIcon({
    Key? key,
    bool matchTextDirection = false,
    AssetBundle? bundle,
    String? package = 'design_system',
    double? size,
    BoxFit fit = BoxFit.contain,
    AlignmentGeometry alignment = Alignment.center,
    bool allowDrawingOutsideViewBox = false,
    WidgetBuilder? placeholderBuilder,
    String? semanticsLabel,
    bool excludeFromSemantics = false,
    SvgTheme theme = const SvgTheme(),
    ColorFilter? colorFilter,
    Clip clipBehavior = Clip.hardEdge,
    @Deprecated('Use colorFilter instead.') Color? color,
    @Deprecated('Use colorFilter instead.')
    BlendMode colorBlendMode = BlendMode.srcIn,
    @Deprecated('This no longer does anything.') bool cacheColorFilter = false,
  }) =>
      SvgPicture.asset(
        path,
        key: key,
        matchTextDirection: matchTextDirection,
        bundle: bundle,
        package: package,
        width: size,
        height: size,
        fit: fit,
        alignment: alignment,
        allowDrawingOutsideViewBox: allowDrawingOutsideViewBox,
        placeholderBuilder: placeholderBuilder,
        semanticsLabel: semanticsLabel,
        excludeFromSemantics: excludeFromSemantics,
        theme: theme,
        colorFilter: colorFilter,
        color: color,
        colorBlendMode: colorBlendMode,
        clipBehavior: clipBehavior,
        cacheColorFilter: cacheColorFilter,
      );

  AppIcon icon({
    Key? key,
    bool matchTextDirection = false,
    AssetBundle? bundle,
    String? package,
    WidgetSize size = WidgetSize.md,
    double? customSize,
    BoxFit fit = BoxFit.contain,
    AlignmentGeometry alignment = Alignment.center,
    bool allowDrawingOutsideViewBox = false,
    AppIconWidgetBuilder? loadingBuilder,
    AppIconWidgetBuilder? placeholderBuilder,
    AppIconWidgetErrorBuilder? errorBuilder,
    String? semanticsLabel,
    bool excludeFromSemantics = false,
    SvgTheme theme = const SvgTheme(),
    ColorFilter? colorFilter,
    Clip clipBehavior = Clip.hardEdge,
    @Deprecated('Use colorFilter instead.') Color? color,
    @Deprecated('Use colorFilter instead.')
    BlendMode colorBlendMode = BlendMode.srcIn,
  }) =>
      AppIcon(
        key: key,
        path: path,
        matchTextDirection: matchTextDirection,
        bundle: bundle,
        package: package,
        size: size,
        customSize: customSize,
        fit: fit,
        alignment: alignment,
        allowDrawingOutsideViewBox: allowDrawingOutsideViewBox,
        loadingBuilder: loadingBuilder,
        placeholderBuilder: placeholderBuilder,
        errorBuilder: errorBuilder,
        semanticLabel: semanticsLabel,
        excludeFromSemantics: excludeFromSemantics,
        svgTheme: theme,
        colorFilter: colorFilter,
        color: color,
        colorBlendMode: colorBlendMode,
        clipBehavior: clipBehavior,
      );
}
